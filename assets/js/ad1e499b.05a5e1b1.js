"use strict";(self.webpackChunkmobile=self.webpackChunkmobile||[]).push([[2594],{2217:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>s,default:()=>z,frontMatter:()=>d,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"Kotlin - wprowadzenie/Klasy/Dziedziczenie","title":"Dziedziczenie (Inheritance)","description":"- to jedna z podstawowych zasad programowania obiektowego (OOP).","source":"@site/docs/1. Kotlin - wprowadzenie/07-Klasy/4.Dziedziczenie.mdx","sourceDirName":"1. Kotlin - wprowadzenie/07-Klasy","slug":"/Kotlin - wprowadzenie/Klasy/Dziedziczenie","permalink":"/mobile/docs/Kotlin - wprowadzenie/Klasy/Dziedziczenie","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/1. Kotlin - wprowadzenie/07-Klasy/4.Dziedziczenie.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Dziedziczenie (Inheritance)"},"sidebar":"tutorialSidebar","previous":{"title":"W\u0142a\u015bciwo\u015bci (Properties)","permalink":"/mobile/docs/Kotlin - wprowadzenie/Klasy/W\u0142a\u015bciwo\u015bci"},"next":{"title":"Enkapsulacja","permalink":"/mobile/docs/Kotlin - wprowadzenie/Klasy/Enkapsulacja"}}');var o=n(4848),l=n(8453);const d={title:"Dziedziczenie (Inheritance)"},s="Dziedziczenie",r={},c=[{value:"Klasa bazowa",id:"klasa-bazowa",level:2},{value:"Klasa dziedzicz\u0105ca po bazowej",id:"klasa-dziedzicz\u0105ca-po-bazowej",level:2},{value:"U\u017cycie w programie",id:"u\u017cycie-w-programie",level:2}];function t(e){const i={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"dziedziczenie",children:"Dziedziczenie"})}),"\n",(0,o.jsxs)(i.admonition,{type:"info",children:[(0,o.jsxs)(i.mdxAdmonitionTitle,{children:["Dziedziczenie (",(0,o.jsx)(i.em,{children:"inheritance"}),")"]}),(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsx)(i.li,{children:"to jedna z podstawowych zasad programowania obiektowego (OOP)."}),"\n",(0,o.jsxs)(i.li,{children:["Pozwala stworzy\u0107 now\u0105 klas\u0119 na podstawie ju\u017c istniej\u0105cej klasy bazowej,","\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:["nowa klasa przejmuje jej:","\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:["w\u0142a\u015bciwo\u015bci (",(0,o.jsx)(i.em,{children:"properties"}),") i"]}),"\n",(0,o.jsxs)(i.li,{children:["funkcje (",(0,o.jsx)(i.em,{children:"metody"}),"),"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(i.li,{children:"nowa klasa mo\u017ce te\u017c dodawa\u0107 w\u0142asne lub modyfikowa\u0107 te odziedziczone."}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,o.jsx)(i.admonition,{title:"Metafora dziedziczenia",type:"note",children:(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsx)(i.li,{children:"Wyobra\u017a sobie klas\u0119 Pojazd jako og\xf3lny przepis na pojazdy: wszystkie maj\u0105 ko\u0142a, mog\u0105 jecha\u0107, maj\u0105 pr\u0119dko\u015b\u0107."}),"\n",(0,o.jsx)(i.li,{children:'Tworz\u0105c klas\u0119 Samoch\xf3d, m\xf3wisz: "To pojazd, ale dodatkowo ma radio i baga\u017cnik". Samoch\xf3d dziedziczy cechy pojazdu, ale ma te\u017c swoje w\u0142asne.'}),"\n"]})}),"\n",(0,o.jsx)(i.h1,{id:"przyk\u0142ad",children:"Przyk\u0142ad"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:["domy\u015blnie klasy i metody s\u0105 ",(0,o.jsx)(i.code,{children:"final"}),", czyli zamkni\u0119te na dziedziczenie,"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"open"})," otwiera klas\u0119 lub metod\u0119 na dziedziczenie"]}),"\n"]}),"\n",(0,o.jsx)(i.h2,{id:"klasa-bazowa",children:"Klasa bazowa"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-kotlin",children:'open class UFO(val shape: String) {\n    open fun fly() {\n        println("UFO o kszta\u0142cie $shape leci przez niebo.")\n    }\n}\n\n'})}),"\n",(0,o.jsx)(i.h2,{id:"klasa-dziedzicz\u0105ca-po-bazowej",children:"Klasa dziedzicz\u0105ca po bazowej"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-kotlin",children:'class SilverUFO : UFO("dysk") {\n    fun cloak() {\n        println("Srebrne UFO w\u0142\u0105czy\u0142o niewidzialno\u015b\u0107!")\n    }\n\n    override fun fly() {\n        println("Srebrne UFO \u015bmiga przez chmury z pr\u0119dko\u015bci\u0105 \u015bwiat\u0142a!")\n    }\n}\n'})}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"SilverUFO"})," dziedziczy po ",(0,o.jsx)(i.code,{children:"UFO"}),"."]}),"\n",(0,o.jsxs)(i.li,{children:["Dodaje now\u0105 funkcj\u0119 ",(0,o.jsx)(i.code,{children:"cloak()"}),"."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"override"})," powoduje nadpisanie metody odziedziczonej ",(0,o.jsx)(i.code,{children:"fly()"}),"."]}),"\n"]}),"\n",(0,o.jsx)(i.h2,{id:"u\u017cycie-w-programie",children:"U\u017cycie w programie"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-kotlin",children:'fun main() {\n    val zwykleUfo = UFO("kula")\n    zwykleUfo.fly()      // UFO o kszta\u0142cie kula leci przez niebo.\n\n    val srebrneUfo = SilverUFO()\n    srebrneUfo.fly()     // Srebrne UFO \u015bmiga przez chmury z pr\u0119dko\u015bci\u0105 \u015bwiat\u0142a!\n    srebrneUfo.cloak()   // Srebrne UFO w\u0142\u0105czy\u0142o niewidzialno\u015b\u0107!\n}\n\n\n'})})]})}function z(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(t,{...e})}):t(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>d,x:()=>s});var a=n(6540);const o={},l=a.createContext(o);function d(e){const i=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),a.createElement(l.Provider,{value:i},e.children)}}}]);