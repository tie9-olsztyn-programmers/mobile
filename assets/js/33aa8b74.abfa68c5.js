"use strict";(self.webpackChunkmobile=self.webpackChunkmobile||[]).push([[9436],{5328:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>s});const o=JSON.parse('{"id":"Kotlin - wprowadzenie/Funkcje/mapowanie-map","title":"Mapowanie - map()","description":"Funkcja map jest funkcj\u0105 wy\u017cszego rz\u0119du, kt\xf3ra pozwala przekszta\u0142ca\u0107 ka\u017cd\u0105 warto\u015b\u0107 w kolekcji wed\u0142ug podanej lambdy.","source":"@site/docs/1. Kotlin - wprowadzenie/06-Funkcje/40-mapowanie-map.mdx","sourceDirName":"1. Kotlin - wprowadzenie/06-Funkcje","slug":"/Kotlin - wprowadzenie/Funkcje/mapowanie-map","permalink":"/mobile/docs/Kotlin - wprowadzenie/Funkcje/mapowanie-map","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/1. Kotlin - wprowadzenie/06-Funkcje/40-mapowanie-map.mdx","tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"title":"Mapowanie - map()"},"sidebar":"tutorialSidebar","previous":{"title":"Filtrowanie - *filter()*","permalink":"/mobile/docs/Kotlin - wprowadzenie/Funkcje/filtrowanie"},"next":{"title":"Funkcja reduce()","permalink":"/mobile/docs/Kotlin - wprowadzenie/Funkcje/redukcja-reduce"}}');var i=a(4848),t=a(8453);const c={title:"Mapowanie - map()"},r=void 0,p={},s=[];function l(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Funkcja map jest funkcj\u0105 wy\u017cszego rz\u0119du, kt\xf3ra pozwala przekszta\u0142ca\u0107 ka\u017cd\u0105 warto\u015b\u0107 w kolekcji wed\u0142ug podanej lambdy."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'fun main() {\nval liczby = listOf(1, 2, 3, 4, 5)\n\n    // Mno\u017cenie ka\u017cdej liczby przez 2 za pomoc\u0105 lambdy\n    val podwojone = liczby.map { it * 2 }\n    println("liczby $liczby")\n    println("Podwojone liczby: $podwojone")  // Wypisze: Podwojone liczby: [2, 4, 6, 8, 10]\n\n    // Zamiana liczb na napisy\n    val jakoStringi = liczby.map { "Liczba: $it" }\n    println("Liczby jako napisy: $jakoStringi")\n    // Wypisze: Liczby jako napisy: [Liczba: 1, Liczba: 2, Liczba: 3, Liczba: 4, Liczba: 5]\n}\n\n'})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>c,x:()=>r});var o=a(6540);const i={},t=o.createContext(i);function c(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);