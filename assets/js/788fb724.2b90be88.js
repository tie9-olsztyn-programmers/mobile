"use strict";(self.webpackChunkmobile=self.webpackChunkmobile||[]).push([[2431],{2297:(n,o,e)=>{e.r(o),e.d(o,{assets:()=>l,contentTitle:()=>s,default:()=>k,frontMatter:()=>t,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"Intro Kotlin/Klasy/Konstruktor","title":"Konstruktor","description":"- Konstruktor to specjalna metoda, kt\xf3ra jest u\u017cywana do tworzenia obiekt\xf3w danej klasy i do inicjalizacji jej p\xf3l.","source":"@site/docs/1. Intro Kotlin/07-Klasy/2.Konstruktor.mdx","sourceDirName":"1. Intro Kotlin/07-Klasy","slug":"/Intro Kotlin/Klasy/Konstruktor","permalink":"/mobile/docs/Intro Kotlin/Klasy/Konstruktor","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/1. Intro Kotlin/07-Klasy/2.Konstruktor.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Konstruktor"},"sidebar":"tutorialSidebar","previous":{"title":"Wprowadzenie do klas w Kotlinie","permalink":"/mobile/docs/Intro Kotlin/Klasy/Wprowadzenie do klas"},"next":{"title":"W\u0142a\u015bciwo\u015bci (Properties)","permalink":"/mobile/docs/Intro Kotlin/Klasy/W\u0142a\u015bciwo\u015bci"}}');var i=e(4848),r=e(8453);const t={title:"Konstruktor"},s="Konstruktor",l={},c=[{value:"WYja\u015bnienie metaforyczne",id:"wyja\u015bnienie-metaforyczne",level:2},{value:"Przyk\u0142ad z klas\u0105 <code>Osoba</code>",id:"przyk\u0142ad-z-klas\u0105-osoba",level:2},{value:"Metaforyczne wyja\u015bnienie",id:"metaforyczne-wyja\u015bnienie",level:2},{value:"<em>Primary constructor</em> (konstruktor podstawowy)",id:"primary-constructor-konstruktor-podstawowy",level:3},{value:"<em>Secondary constructor</em> (konstruktor dodatkowy)",id:"secondary-constructor-konstruktor-dodatkowy",level:3},{value:"Konstruktor podstawowy (<em>Primary Constructor</em>)",id:"konstruktor-podstawowy-primary-constructor",level:2},{value:"Konstruktor dodatkowy (<em>Secondary Constructor</em>)",id:"konstruktor-dodatkowy-secondary-constructor",level:2}];function d(n){const o={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.header,{children:(0,i.jsx)(o.h1,{id:"konstruktor",children:"Konstruktor"})}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"Konstruktor to specjalna metoda, kt\xf3ra jest u\u017cywana do tworzenia obiekt\xf3w danej klasy i do inicjalizacji jej p\xf3l."}),"\n",(0,i.jsx)(o.li,{children:"Mo\u017cemy przekazywa\u0107 warto\u015bci do klasy poprzez konstruktor, a nie przypisywa\u0107 je r\u0119cznie."}),"\n"]}),"\n",(0,i.jsx)(o.h2,{id:"wyja\u015bnienie-metaforyczne",children:"WYja\u015bnienie metaforyczne"}),"\n",(0,i.jsx)(o.p,{children:"Pozostaj\u0105c przy metaforze ciasta:"}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"konstruktor to taki moment, kiedy bierzesz przepis do r\u0119ki, zbierasz sk\u0142adniki i faktycznie pieczesz ciasto."}),"\n",(0,i.jsx)(o.li,{children:'To jest ta "magiczna chwila" ;), kiedy powstaje co\u015b konkretnego na podstawie og\xf3lnego przepisu.'}),"\n",(0,i.jsxs)(o.li,{children:["metafora:","\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"Przepis (klasa) m\xf3wi, jakie sk\u0142adniki s\u0105 potrzebne (np. smak, liczba warstw)."}),"\n",(0,i.jsx)(o.li,{children:'Konstruktor to czynno\u015b\u0107: bierzesz przepis, wybierasz smak "czekoladowy" i 3 warstwy, mieszasz sk\u0142adniki i pieczesz ciasto.'}),"\n",(0,i.jsx)(o.li,{children:"Efekt? Masz gotowe ciasto \u2014 czyli obiekt!"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-kotlin",children:'class Cake(val flavor: String, val layers: Int) // <-- to jest konstruktor\n\n// wywo\u0142anie konstruktora, czyli stworzenie obiektu/instancji\nval cake = Cake("czekoladowy", 3)\n// To jakby\u015b powiedzia\u0142:\n// Poprosz\u0119 ciasto: smak "czekoladowy", liczba warstw 3!\n// (i piekarnik ju\u017c robi swoje\u2026)\n'})}),"\n",(0,i.jsxs)(o.h2,{id:"przyk\u0142ad-z-klas\u0105-osoba",children:["Przyk\u0142ad z klas\u0105 ",(0,i.jsx)(o.code,{children:"Osoba"})]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-kotlin",children:'class Osoba(val imie: String, var wiek: Int) {\n    fun powitaj() {\n        println("Cze\u015b\u0107, mam na imi\u0119 $imie i mam $wiek lat.")\n    }\n}\n\nfun main() {\n    // Tworzenie obiektu z u\u017cyciem konstruktora\n    val osoba = Osoba("Anna", 25)\n    osoba.powitaj()  // Wypisze: Cze\u015b\u0107, mam na imi\u0119 Anna i mam 25 lat.\n}\n'})}),"\n",(0,i.jsx)(o.h1,{id:"rodzaje-konstruktor\xf3\u0153",children:"Rodzaje konstruktor\xf3\u0153"}),"\n",(0,i.jsx)(o.p,{children:"Kotlin oferuje dwa rodzaje konstruktor\xf3w:"}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:["konstruktory podstawowe (",(0,i.jsx)(o.em,{children:"primary constructors"}),") i"]}),"\n",(0,i.jsxs)(o.li,{children:["konstruktory dodatkowe (",(0,i.jsx)(o.em,{children:"secondary constructors"}),")."]}),"\n"]}),"\n",(0,i.jsx)(o.p,{children:"Ka\u017cdy z nich ma swoje specyficzne zastosowania i cechy."}),"\n",(0,i.jsx)(o.h2,{id:"metaforyczne-wyja\u015bnienie",children:"Metaforyczne wyja\u015bnienie"}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"Wyobra\u017a sobie, \u017ce jeste\u015b cukiernikiem i masz przepis na ciasto (klasa)."}),"\n",(0,i.jsx)(o.li,{children:"Klient mo\u017ce chcie\u0107 r\xf3\u017cne wersje tego ciasta \u2014 raz z nadzieniem, raz bez, czasem w innej foremce, czasem szybkie i proste."}),"\n"]}),"\n",(0,i.jsxs)(o.h3,{id:"primary-constructor-konstruktor-podstawowy",children:[(0,i.jsx)(o.em,{children:"Primary constructor"})," (konstruktor podstawowy)"]}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"To taki g\u0142\xf3wny przepis \u2014 kartka na pocz\u0105tku ksi\u0105\u017cki kucharskiej, gdzie jasno pisze:"}),"\n"]}),"\n",(0,i.jsxs)(o.blockquote,{children:["\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"Do upieczenia ciasta potrzebujesz: smak i liczb\u0119 warstw."}),"\n",(0,i.jsx)(o.li,{children:"Zawsze, kiedy kto\u015b zamawia ciasto, pyta w\u0142a\u015bnie o te dwie rzeczy i bez tego nie da si\u0119 ciasta upiec."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-kotlin",children:'class Cake(val flavor: String, val layers: Int) // <-- primary constructor\n\nval myCake = Cake("waniliowy", 5) //Czyli zawsze podajesz smak i liczb\u0119 warstw \u2014 to s\u0105 sk\u0142adniki niezb\u0119dne.\n'})}),"\n",(0,i.jsxs)(o.h3,{id:"secondary-constructor-konstruktor-dodatkowy",children:[(0,i.jsx)(o.em,{children:"Secondary constructor"})," (konstruktor dodatkowy)"]}),"\n",(0,i.jsx)(o.p,{children:"To troch\u0119 jak alternatywny przepis albo dodatek na marginesie, kt\xf3ry m\xf3wi:"}),"\n",(0,i.jsxs)(o.blockquote,{children:["\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"Mo\u017cesz te\u017c upiec ciasto tylko podaj\u0105c smak, a liczb\u0119 warstw domy\u015blnie ustawimy na 1!"}),"\n",(0,i.jsx)(o.li,{children:"Albo: Jak nie podasz smaku, to damy waniliowe, a jak nie podasz liczby warstw, zrobimy jedno."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-kotlin",children:'class Cake(val flavor: String, val layers: Int) {\n    // this(flavor, 1) - to wywo\u0142anie konstruktora g\u0142\xf3\u0153nego\n    constructor(flavor: String) : this(flavor, 1) // secondary constructor\n}\n\n// Czyli masz mo\u017cliwo\u015b\u0107 wywo\u0142a\u0107 przepis szybciej:\nval ciastoEkspres = Cake("czekoladowy") // zrobi ciasto o smaku "czekoladowym", 1 warstwa\n'})}),"\n",(0,i.jsx)(o.hr,{}),"\n",(0,i.jsxs)(o.h2,{id:"konstruktor-podstawowy-primary-constructor",children:["Konstruktor podstawowy (",(0,i.jsx)(o.em,{children:"Primary Constructor"}),")"]}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"Konstruktor podstawowy to zwi\u0119z\u0142a i najcz\u0119\u015bciej stosowana forma konstruktora w Kotlinie."}),"\n",(0,i.jsx)(o.li,{children:"Jest cz\u0119\u015bci\u0105 nag\u0142\xf3wka klasy i pozwala na inicjalizacj\u0119 w\u0142a\u015bciwo\u015bci klasy bez konieczno\u015bci definiowania osobnych zmiennych w ciele klasy."}),"\n"]}),"\n",(0,i.jsx)(o.p,{children:"Og\xf3lna syntaktyka:"}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{children:"class NazwaKlasy(val pole1: Typ1, var pole2: Typ2) {\n    // Cia\u0142o klasy (opcjonalne)\n}\n"})}),"\n",(0,i.jsx)(o.p,{children:"Przyk\u0142ad"}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-kotlin",children:'class Osoba(val imie: String, var wiek: Int) {\n    // Dodatkowe metody lub logika\n    fun powitaj() {\n        println("Cze\u015b\u0107, mam na imi\u0119 $imie i mam $wiek lat.")\n    }\n}\n\nfun main() {\n    val osoba = Osoba("Jan", 30)\n    osoba.powitaj()  // Wypisze: Cze\u015b\u0107, mam na imi\u0119 Jan i mam 30 lat.\n}\n\n'})}),"\n",(0,i.jsxs)(o.h2,{id:"konstruktor-dodatkowy-secondary-constructor",children:["Konstruktor dodatkowy (",(0,i.jsx)(o.em,{children:"Secondary Constructor"}),")"]}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:["Konstruktory dodatkowe s\u0105 definiowane za pomoc\u0105 s\u0142owa kluczowego ",(0,i.jsx)(o.code,{children:"constructor"})," wewn\u0105trz cia\u0142a klasy."]}),"\n",(0,i.jsx)(o.li,{children:"S\u0142u\u017c\u0105 one do dodawania r\xf3\u017cnych sposob\xf3w inicjalizacji obiektu."}),"\n",(0,i.jsxs)(o.li,{children:["Zasady u\u017cycia konstruktor\xf3w dodatkowych","\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:["Je\u015bli klasa ma konstruktor g\u0142\xf3wny, ka\u017cdy konstruktor dodatkowy musi wywo\u0142ywa\u0107 go bezpo\u015brednio lub po\u015brednio, u\u017cywaj\u0105c s\u0142owa kluczowego ",(0,i.jsx)(o.code,{children:"this"}),"."]}),"\n",(0,i.jsx)(o.li,{children:"Konstruktor g\u0142\xf3wny jest zawsze wywo\u0142ywany jako pierwszy (je\u015bli jest zdefiniowany), a nast\u0119pnie wywo\u0142ywane s\u0105 konstruktory dodatkowe, je\u015bli ich u\u017cywamy."}),"\n",(0,i.jsx)(o.li,{children:"Konstruktor\xf3w dodatkowych u\u017cywa si\u0119, gdy inicjalizacja wymaga bardziej z\u0142o\u017conej logiki, kt\xf3rej nie mo\u017cna umie\u015bci\u0107 w konstruktorze g\u0142\xf3wnym."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-kotlin",children:'class Car(val make: String, val model: String) {\n     var year: Int // dodatkowa w\u0142a\u015bciwo\u015b\u0107 obiektu\n\n     // Konstruktor g\u0142\xf3wny inicjalizuje make i model, ale year jest inicjalizowany p\xf3\u017aniej\n     constructor(make: String, model: String, year: Int) : this(make, model) {\n         this.year = year\n     }\n\n     constructor() : this("Unknown", "Unknown", 0) {\n         // Konstruktor domy\u015blny ustawiaj\u0105cy wszystkie w\u0142a\u015bciwo\u015bci na warto\u015bci domy\u015blne\n     }\n}\n\n\nfun main() {\n val car1 = Car("Toyota", "Corolla", 2020)\n val car2 = Car("Honda", "Civic")\n val car3 = Car()\n\n\n println(car1.make) // Toyota\n println(car2.make) // Honda\n println(car3.make) // Unknown\n}\n'})}),"\n",(0,i.jsx)(o.p,{children:"Je\u017celi klasa nie ma konstruktora g\u0142\xf3wnego, konstruktory dodatkowe dzia\u0142aj\u0105 niezale\u017cnie i nie musz\u0105 wywo\u0142ywa\u0107 g\u0142\xf3wnego konstruktora:"}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-kotlin",children:'class Person {\n     var name: String   // w\u0142a\u015bciwo\u015b\u0107 obiektu\n     var age: Int       // w\u0142a\u015bciwo\u015b\u0107 obiektu\n\n     // Konstruktor g\u0142\xf3wny bez argument\xf3w\n     constructor() {\n         name = "Unknown"\n         age = 0\n     }\n\n     // Konstruktor dodatkowy z parametrami\n     constructor(name: String, age: Int) {\n         this.name = name\n         this.age = age\n     }\n\n     // Konstruktor dodatkowy z jednym parametrem\n     constructor(name: String) : this(name, 0) {\n         // Wywo\u0142anie innego konstruktora za pomoc\u0105 `this`\n     }\n}\n'})})]})}function k(n={}){const{wrapper:o}={...(0,r.R)(),...n.components};return o?(0,i.jsx)(o,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},8453:(n,o,e)=>{e.d(o,{R:()=>t,x:()=>s});var a=e(6540);const i={},r=a.createContext(i);function t(n){const o=a.useContext(r);return a.useMemo(function(){return"function"==typeof n?n(o):{...o,...n}},[o,n])}function s(n){let o;return o=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:t(n.components),a.createElement(r.Provider,{value:o},n.children)}}}]);