"use strict";(self.webpackChunkmobile=self.webpackChunkmobile||[]).push([[945],{3858:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>s,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"Wprowadzenie-do-j\u0119zyka-Kotlin/Funkcje/redukcja-reduce","title":"Funkcja reduce()","description":"Funkcja reduce jest funkcj\u0105 wy\u017cszego rz\u0119du, kt\xf3ra pozwala zredukowa\u0107:","source":"@site/docs/01-Wprowadzenie-do-j\u0119zyka-Kotlin/06-Funkcje/05-redukcja-reduce.mdx","sourceDirName":"01-Wprowadzenie-do-j\u0119zyka-Kotlin/06-Funkcje","slug":"/Wprowadzenie-do-j\u0119zyka-Kotlin/Funkcje/redukcja-reduce","permalink":"/mobile/docs/Wprowadzenie-do-j\u0119zyka-Kotlin/Funkcje/redukcja-reduce","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/01-Wprowadzenie-do-j\u0119zyka-Kotlin/06-Funkcje/05-redukcja-reduce.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Funkcja reduce()"},"sidebar":"tutorialSidebar","previous":{"title":"Mapowanie - map()","permalink":"/mobile/docs/Wprowadzenie-do-j\u0119zyka-Kotlin/Funkcje/mapowanie-map"},"next":{"title":"Funkcja fold()","permalink":"/mobile/docs/Wprowadzenie-do-j\u0119zyka-Kotlin/Funkcje/redukcja-fold"}}');var o=c(4848),r=c(8453);const i={title:"Funkcja reduce()"},t=void 0,l={},d=[];function u(e){const n={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Funkcja ",(0,o.jsx)(n.code,{children:"reduce"})," jest funkcj\u0105 wy\u017cszego rz\u0119du, kt\xf3ra pozwala zredukowa\u0107:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"list\u0119 do jednej warto\u015bci,"}),"\n",(0,o.jsx)(n.li,{children:"przetwarzaj\u0105c kolejne elementy z pomoc\u0105 lambdy."}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'fun main() {\nval liczby = listOf(1, 2, 3, 4, 5)\n\n    // Sumowanie liczb za pomoc\u0105 lambdy\n    val suma = liczby.reduce { acc, number -> acc + number }\n    println("Suma liczb: $suma")  // Wypisze: Suma liczb: 15\n\n    // Mno\u017cenie liczb za pomoc\u0105 lambdy\n    val iloczyn = liczby.reduce { acc, number -> acc * number }\n    println("Iloczyn liczb: $iloczyn")  // Wypisze: Iloczyn liczb: 120\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"==Jak dzia\u0142a reduce?=="}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Dla listy ",(0,o.jsx)(n.code,{children:"[1, 2, 3, 4, 5]"})," funkcja ",(0,o.jsx)(n.code,{children:"reduce"})," zaczyna od pierwszego elementu, czyli ",(0,o.jsx)(n.code,{children:"1"}),",\ni ustawia go jako pocz\u0105tkow\u0105 warto\u015b\u0107 akumulatora."]}),"\n",(0,o.jsx)(n.li,{children:"W kolejnych krokach, bierze nast\u0119pny element z listy i wykonuje na nim operacj\u0119 okre\u015blon\u0105 w lambdzie, aktualizuj\u0105c akumulator:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Pierwsza iteracja: acc = 1, element = 2 \u2192 acc = 1 + 2 = 3\nDruga iteracja:      acc = 3, element = 3 \u2192 acc = 3 + 3 = 6\nTrzecia iteracja:    acc = 6, element = 4 \u2192 acc = 6 + 4 = 10\nCzwarta iteracja:  acc = 10, element = 5 \u2192 acc = 10 + 5 = 15\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Wynik ko\u0144cowy to warto\u015b\u0107 akumulatora po przetworzeniu wszystkich element\xf3w listy, czyli ",(0,o.jsx)(n.code,{children:"15"})," w przypadku sumowania."]})]})}function s(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,n,c)=>{c.d(n,{R:()=>i,x:()=>t});var a=c(6540);const o={},r=a.createContext(o);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);