"use strict";(self.webpackChunkmobile=self.webpackChunkmobile||[]).push([[676],{795:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"Intro Kotlin/typyProste","title":"Typy proste","description":"zmienna jest jak kubek - mo\u017cna w niej co\u015b umie\u015bci\u0107.","source":"@site/docs/1. Intro Kotlin/02-typyProste.mdx","sourceDirName":"1. Intro Kotlin","slug":"/Intro Kotlin/typyProste","permalink":"/mobile/docs/Intro Kotlin/typyProste","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/1. Intro Kotlin/02-typyProste.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Typy proste"},"sidebar":"tutorialSidebar","previous":{"title":"Wprowadzenie","permalink":"/mobile/docs/Intro Kotlin/intro"},"next":{"title":"Expressions/Wyra\u017cenia","permalink":"/mobile/docs/Intro Kotlin/expressions"}}');var r=i(4848),t=i(8453);const a={title:"Typy proste"},l="Wprowadzenie",s={},c=[{value:"liczby ca\u0142kowite",id:"liczby-ca\u0142kowite",level:2},{value:"zmiennoprzecinkowe",id:"zmiennoprzecinkowe",level:2},{value:"znaki i \u0142a\u0144cuchy",id:"znaki-i-\u0142a\u0144cuchy",level:2},{value:"Konwersja",id:"konwersja",level:2},{value:"Konwersja liczb na string i string na liczby",id:"konwersja-liczb-na-string-i-string-na-liczby",level:2},{value:"LOSOWANIE LICZBY od 1 do 6",id:"losowanie-liczby-od-1-do-6",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"wprowadzenie",children:"Wprowadzenie"})}),"\n",(0,r.jsx)(e.p,{children:"zmienna jest jak kubek - mo\u017cna w niej co\u015b umie\u015bci\u0107."}),"\n",(0,r.jsx)(e.p,{children:"Aby utworzy\u0107 zmienn\u0105, kompilator musi zna\u0107:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"nazw\u0119"}),"\n",(0,r.jsx)(e.li,{children:"typ"}),"\n",(0,r.jsxs)(e.li,{children:["modyfikowalno\u015b\u0107:","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"var"})," mo\u017cna zmieni\u0107 warto\u015b\u0107 zapisan\u0105 w zmiennej,"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"val"})," referencja do obiektu pozostanie w tej zmiennej na zawsze i nie b\u0119dzie mog\u0142a zosta\u0107 zmieniona"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Kompilator potrafi jednak wywnioskowa\u0107 typ zmiennej na podstawie warto\u015bci, jak\u0105 tej zmiennej przypiszemy."}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"var x = 5"})," -> kompilator utworzy obiekt ",(0,r.jsx)(e.code,{children:"Int"})," o warto\u015bci ",(0,r.jsx)(e.code,{children:"5"}),",\nczyli zmienna x przechowuje  referencj\u0119  do tego obiektu."]}),"\n",(0,r.jsx)(e.p,{children:"referencja"}),"\n",(0,r.jsx)(e.h1,{id:"typy-proste",children:"Typy proste"}),"\n",(0,r.jsx)(e.p,{children:"Typ prosty (ang. primitive type) to\nrodzaj typu danych, kt\xf3ry reprezentuje podstawowe, niepodzielne warto\u015bci w j\u0119zykach programowania.\ns\u0105 zwykle wbudowane w j\u0119zyk i charakteryzuj\u0105 si\u0119 tym, \u017ce nie s\u0105 z\u0142o\u017cone ani obiektowe,\nw przeciwie\u0144stwie do typ\xf3w z\u0142o\u017conych (takich jak klasy czy tablice), typy proste przechowuj\u0105 bezpo\u015brednie warto\u015bci, a nie referencje do obiekt\xf3w."}),"\n",(0,r.jsx)(e.h2,{id:"liczby-ca\u0142kowite",children:"liczby ca\u0142kowite"}),"\n",(0,r.jsx)(e.p,{children:"Byte\nShort\nInt\nLong\nprzyk\u0142ad: var smallNum: Short = 6"}),"\n",(0,r.jsx)(e.h2,{id:"zmiennoprzecinkowe",children:"zmiennoprzecinkowe"}),"\n",(0,r.jsx)(e.p,{children:"Float - var x: Float = 123.5F\nDouble - var x: Double = 123.5\nwarto\u015bci logiczne var isChecked: Boolean = true"}),"\n",(0,r.jsx)(e.p,{children:"true\nfalse"}),"\n",(0,r.jsx)(e.h2,{id:"znaki-i-\u0142a\u0144cuchy",children:"znaki i \u0142a\u0144cuchy"}),"\n",(0,r.jsx)(e.p,{children:"Char - var letter: Char = 'D'\nString - var name = \"Fido\""}),"\n",(0,r.jsx)(e.h2,{id:"konwersja",children:"Konwersja"}),"\n",(0,r.jsx)(e.p,{children:"var x = 5\nvar z: Long = x.toLong()"}),"\n",(0,r.jsx)(e.p,{children:"inne metody konwertuj\u0105ce:"}),"\n",(0,r.jsx)(e.p,{children:"toByte()\ntoShort()\ntoInt()\ntoLong()\ntoFloat()\ntoDouble()"}),"\n",(0,r.jsx)(e.p,{children:"Pr\xf3ba zapisania du\u017cej warto\u015bci w ma\u0142ej zmiennej jest jak pr\xf3ba przelania du\u017cego kubka kawy do male\u0144kiej fili\u017canki. Cz\u0119\u015b\u0107 kawy zmie\u015bci si\u0119 w fili\u017cance, lecz cz\u0119\u015b\u0107 si\u0119 wyleje."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-kotlin",children:'fun main(){\n    val a: Double = 2345.324231231\n    val x: Float = a.toFloat()\n    val y: Int = x.toInt()\n    println("a=$a\\nx=$x\\ny=$y\\n")\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"a=2345.324231231 x=2345.3242 y=2345"})}),"\n",(0,r.jsx)(e.h2,{id:"konwersja-liczb-na-string-i-string-na-liczby",children:"Konwersja liczb na string i string na liczby"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-kotlin",children:'val stringAge: String = "22"\nval intAge: Int = stringAge.toInt() // zamiana String na Int\nprintln(intAge)\nval newStringAge: String = intAge.toString()\nprintln(newStringAge)\n'})}),"\n",(0,r.jsx)(e.h1,{id:"liczby-pseudolosowe",children:"Liczby pseudolosowe"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'println("${Math.random()}")\n0.5301868452123193\n\nprintln("${Math.random()}")\n0.8473722267596359\n\nprintln("${(Math.random()*10).toInt()}")\n7\n\nprintln("${(Math.random()*10).toInt()}")\n9\n'})}),"\n",(0,r.jsx)(e.h2,{id:"losowanie-liczby-od-1-do-6",children:"LOSOWANIE LICZBY od 1 do 6"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:"println((Math.random()*6).toInt()+1)"})}),"\n",(0,r.jsxs)(e.p,{children:["lepsza wersja\n",(0,r.jsx)(e.code,{children:"println((1..6).random())"})]}),"\n",(0,r.jsx)(e.h1,{id:"typy-z\u0142o\u017cone",children:"Typy z\u0142o\u017cone:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"obiekty"}),"\n",(0,r.jsx)(e.li,{children:"klas,"}),"\n",(0,r.jsx)(e.li,{children:"tablice,"}),"\n",(0,r.jsx)(e.li,{children:"listy,"}),"\n",(0,r.jsx)(e.li,{children:"struktury,"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"zawieraj\u0105 wi\u0119cej ni\u017c jedn\u0105 warto\u015b\u0107 lub dodatkowe informacje (np. metadane, metody),\ns\u0105 bardziej zaawansowane, ale mog\u0105 by\u0107 mniej wydajne pod wzgl\u0119dem operacji i pami\u0119ci."})]})}function p(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>l});var o=i(6540);const r={},t=o.createContext(r);function a(n){const e=o.useContext(t);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),o.createElement(t.Provider,{value:e},n.children)}}}]);