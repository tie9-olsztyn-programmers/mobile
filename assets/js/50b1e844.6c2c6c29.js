"use strict";(self.webpackChunkmobile=self.webpackChunkmobile||[]).push([[3440],{4330:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>j,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Nawigacja i  fragmenty/Fragmenty/PrzekazywanieDanychViewModel","title":"ViewModel - przekazywanie danych","description":"Kontynuujemy projekt z poprzedniej lekcji.","source":"@site/docs/10.Nawigacja i  fragmenty/10.Fragmenty/15.PrzekazywanieDanychViewModel.mdx","sourceDirName":"10.Nawigacja i  fragmenty/10.Fragmenty","slug":"/Nawigacja i  fragmenty/Fragmenty/PrzekazywanieDanychViewModel","permalink":"/mobile/docs/Nawigacja i  fragmenty/Fragmenty/PrzekazywanieDanychViewModel","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/10.Nawigacja i  fragmenty/10.Fragmenty/15.PrzekazywanieDanychViewModel.mdx","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{"title":"ViewModel - przekazywanie danych"},"sidebar":"tutorialSidebar","previous":{"title":"cz. 2 Przekazywanie argument\xf3w w Navigation Component","permalink":"/mobile/docs/Nawigacja i  fragmenty/Fragmenty/czesc2PrzekazywanieDanych"},"next":{"title":"BottomNavigationView","permalink":"/mobile/docs/Nawigacja i  fragmenty/Fragmenty/BottomNavigationView"}}');var r=i(4848),d=i(8453);const l={title:"ViewModel - przekazywanie danych"},o="M\xf3j w\u0142asny potw\xf3r - ViewModelu",a={},c=[{value:"Zmiana wymaga\u0144",id:"zmiana-wymaga\u0144",level:2},{value:"<code>ViewModel</code>",id:"viewmodel",level:2},{value:"Konfiguracja projektu",id:"konfiguracja-projektu",level:3},{value:"Teoria",id:"teoria",level:3},{value:"Praktyka",id:"praktyka",level:3},{value:"<code>MonsterViewModel.kt</code>",id:"monsterviewmodelkt",level:4},{value:"<code>MainAcitivity.kt</code>",id:"mainacitivitykt",level:4},{value:"<code>FirstFragment.kt</code>",id:"firstfragmentkt",level:4},{value:"<code>SecondFragment.kt</code>",id:"secondfragmentkt",level:2},{value:"Nazwa potwora przez <code>MonsterViewModel</code>",id:"nazwa-potwora-przez-monsterviewmodel",level:2},{value:"Podsumowanie aktualnego stanu",id:"podsumowanie-aktualnego-stanu",level:3},{value:"Zmiany",id:"zmiany",level:3},{value:"Dodanie setter w <code>MonsterViewModel</code>",id:"dodanie-setter-w-monsterviewmodel",level:4},{value:"U\u017cycie settera w <code>FirstFragment</code>",id:"u\u017cycie-settera-w-firstfragment",level:4},{value:"Obserwowanie <code>MonsterViewModel</code> w <code>SecondFragment</code>",id:"obserwowanie-monsterviewmodel-w-secondfragment",level:4},{value:"Gdy dekskrypcja i imi\u0119 sta\u0142y si\u0119 jednym obiektem",id:"gdy-dekskrypcja-i-imi\u0119-sta\u0142y-si\u0119-jednym-obiektem",level:2},{value:"Dodajemy dataclass <code>Monster.kt</code>",id:"dodajemy-dataclass-monsterkt",level:3},{value:"Zmiany w <code>MonsterViewModel.kt</code>",id:"zmiany-w-monsterviewmodelkt",level:3},{value:"Zmiany w <code>FirstFragment.kt</code>",id:"zmiany-w-firstfragmentkt",level:3},{value:"Zmiany w <code>SecondFragment.kt</code>",id:"zmiany-w-secondfragmentkt",level:3}];function t(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsxs)(n.h1,{id:"m\xf3j-w\u0142asny-potw\xf3r---viewmodelu",children:["M\xf3j w\u0142asny potw\xf3r - ",(0,r.jsx)(n.code,{children:"ViewModelu"})]})}),"\n",(0,r.jsx)(n.p,{children:"Kontynuujemy projekt z poprzedniej lekcji."}),"\n",(0,r.jsx)(n.h2,{id:"zmiana-wymaga\u0144",children:"Zmiana wymaga\u0144"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SecondFragment"})," wysy\u0142a dane do ",(0,r.jsx)(n.code,{children:"FirstFragment"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"FirstFragment"})," od razu reaguje i wy\u015bwietla je"]}),"\n",(0,r.jsxs)(n.li,{children:["wszystko w ramach jednej aktywno\u015bci, bez ",(0,r.jsx)(n.code,{children:"popBackStack()"})," i bez u\u017cycia ",(0,r.jsx)(n.code,{children:"savedStateHandle"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"viewmodel",children:(0,r.jsx)(n.code,{children:"ViewModel"})}),"\n",(0,r.jsx)(n.h3,{id:"konfiguracja-projektu",children:"Konfiguracja projektu"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"lib.versions.toml"})," dodajemy potrzebne biblioteki"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[versions]\n...\n\nandroidx-fragment = "1.7.1"\nandroidx-lifecycle = "2.8.0"\n\n\n[libraries]\n...\nandroidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx-fragment" }\nandroidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }\nandroidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidx-lifecycle" }\n\n...\n\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"build.gradle.kts"})," (module)"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kts",children:"...\ndependencies {\n\n    //viewmodel\n    implementation(libs.androidx.fragment.ktx)\n    implementation(libs.androidx.lifecycle.viewmodel.ktx)\n    implementation(libs.androidx.lifecycle.livedata.ktx)\n\n...\n\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Pami\u0119taj o synchronizacji projektu!!!!"}),"\n",(0,r.jsx)(n.h3,{id:"teoria",children:"Teoria"}),"\n",(0,r.jsxs)(n.p,{children:["Za\u0142o\u017cone cele osi\u0105gniemy przez ",(0,r.jsxs)(n.strong,{children:["u\u017cycie wsp\xf3lnego dla fragment\xf3w ",(0,r.jsx)(n.code,{children:"ViewModelu"}),"."]})]}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsxs)(n.mdxAdmonitionTitle,{children:["Co to jest ",(0,r.jsx)(n.code,{children:"ViewModel"}),"?"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ViewModel"})," to specjalna klasa, kt\xf3ra:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"przechowuje dane i logik\u0119 ekranu (fragmentu lub aktywno\u015bci),"}),"\n",(0,r.jsxs)(n.li,{children:["przetrwa rotacj\u0119 ekranu (czyli nie ginie przy ",(0,r.jsx)(n.code,{children:"onDestroyView()"}),"),"]}),"\n",(0,r.jsx)(n.li,{children:"i umo\u017cliwia wymian\u0119 danych mi\u0119dzy fragmentami w tej samej aktywno\u015bci."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Cykl \u017cycia"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Zwyk\u0142y Fragment ma bardzo kr\xf3tki cykl \u017cycia:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"jego widok jest niszczony np. przy rotacji ekranu,"}),"\n",(0,r.jsxs)(n.li,{children:["przez to tracisz wszystkie dane z ",(0,r.jsx)(n.code,{children:"EditText"}),", ",(0,r.jsx)(n.code,{children:"CheckBox"}),", itp."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.code,{children:"ViewModel"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"przetrwa rotacj\u0119,"}),"\n",(0,r.jsx)(n.li,{children:"zachowa stan,"}),"\n",(0,r.jsx)(n.li,{children:"i zostanie zniszczony, dopiero gdy Activity zostanie zamkni\u0119ta."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Jak dzia\u0142a w tle"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Android ma specjalny magazyn ",(0,r.jsx)(n.code,{children:"ViewModeli"})," przypisany do ka\u017cdej ",(0,r.jsx)(n.code,{children:"Activity"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Gdy pierwszy raz poprosisz o ",(0,r.jsx)(n.code,{children:"ViewModel"}),", Android tworzy go i zapisuje w tym magazynie."]}),"\n",(0,r.jsxs)(n.li,{children:["Przy rotacji ekranu Android niszczy widoki, ale nie magazyn, wi\u0119c Tw\xf3j ",(0,r.jsx)(n.code,{children:"ViewModel"})," zostaje."]}),"\n",(0,r.jsxs)(n.li,{children:["Nowy Fragment po rotacji dostaje ten sam obiekt ",(0,r.jsx)(n.code,{children:"ViewModel"}),", a nie nowy."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Powi\u0105zane elementy:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ViewModel"})," przechowuje dane i logik\u0119 UI"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"LiveData"})," pozwala fragmentowi obserwowa\u0107 zmiany danych w ",(0,r.jsx)(n.code,{children:"ViewModel"}),"u"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"activityViewModels()"})," umo\u017cliwia fragmentom w tej samej aktywno\u015bci wsp\xf3\u0142dzieli\u0107 jeden ",(0,r.jsx)(n.code,{children:"ViewModel"})]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsxs)(n.mdxAdmonitionTitle,{children:[(0,r.jsx)(n.code,{children:"LiveData"})," metaforycznie"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"jest jak radio"}),"\n",(0,r.jsx)(n.li,{children:"Gdy tylko kto\u015b co\u015b zmieni (np. opis potwora), to"}),"\n",(0,r.jsx)(n.li,{children:"radio natychmiast powiadamia wszystkich, kt\xf3rzy nas\u0142uchuj\u0105"}),"\n",(0,r.jsx)(n.li,{children:"nie musisz pyta\u0107 co chwil\u0119 \u201eczy co\u015b si\u0119 zmieni\u0142o?\u201d \u2013 radio samo Ci to powie."}),"\n"]})]}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsxs)(n.mdxAdmonitionTitle,{children:[(0,r.jsx)(n.code,{children:"ViewModel"})," metaforycznie"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["je\u017celi ",(0,r.jsx)(n.code,{children:"Acitvity"})," to mieszkanie, a fragmenty to pokoje"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ViewModel"})," jest jak","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"szafka na przedpokoju"}),"\n",(0,r.jsx)(n.li,{children:"ka\u017cdy fragment (pok\xf3j) ma do niej dost\u0119p"}),"\n",(0,r.jsxs)(n.li,{children:["w jej szufladach s\u0105 r\xf3\u017cne dane, kt\xf3re fragmenty mog\u0105:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"odczytywa\u0107"}),"\n",(0,r.jsx)(n.li,{children:"zmienia\u0107"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["a ",(0,r.jsx)(n.code,{children:"LiveData"})," powiadamia wszystkie fragmenty o zmianach w szufladach"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsx)(n.h3,{id:"praktyka",children:"Praktyka"}),"\n",(0,r.jsxs)(n.p,{children:["Napiszmy w\u0142asny ",(0,r.jsx)(n.code,{children:"ViewModel"})," dla potwora."]}),"\n",(0,r.jsx)(n.h4,{id:"monsterviewmodelkt",children:(0,r.jsx)(n.code,{children:"MonsterViewModel.kt"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"import androidx.lifecycle.LiveData\nimport androidx.lifecycle.MutableLiveData\nimport androidx.lifecycle.ViewModel\n\nclass MonsterViewModel: ViewModel() {\n    private val _monsterDescription = MutableLiveData<String>()\n    val monsterDescription: LiveData<String> get() = _monsterDescription\n\n    fun sendMonsterDescription(description: String) {\n        _monsterDescription.value = description\n    }\n\n}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Chcemy, \u017ceby oba fragmenty mia\u0142y ten sam ",(0,r.jsx)(n.code,{children:"ViewModel"})," (nieosobne kopie)."]}),"\n",(0,r.jsxs)(n.li,{children:["Dlatego pobierzemy go z poziomu ",(0,r.jsx)(n.code,{children:"Activity"})," (czyli wsp\xf3lnego w\u0142a\u015bciciela)."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"mainacitivitykt",children:(0,r.jsx)(n.code,{children:"MainAcitivity.kt"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"// w\u0142a\u015bciwo\u015b\u0107 obiektu MainAcitivity\n\n//...\n  private val sharedViewModel: MonsterViewModel by viewModels()\n\n//...\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"MonsterViewModel by viewModels"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["ten kod tworzy obiekt klasy ",(0,r.jsx)(n.code,{children:"MonsterViewModel"}),","]}),"\n",(0,r.jsxs)(n.li,{children:["obiekt ten b\u0119dzie przypisany do cyklu \u017cycia tej aktywno\u015bci (",(0,r.jsx)(n.code,{children:"MainActivity"}),"):","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"jest tworzony tylko raz,"}),"\n",(0,r.jsx)(n.li,{children:"nie znika przy zmianie fragment\xf3w,"}),"\n",(0,r.jsx)(n.li,{children:"ale zostanie zniszczony, gdy zamkniesz ca\u0142\u0105 aktywno\u015b\u0107 (np. wyjdziesz z aplikacji)."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"by viewModels()"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Android sam utworzy ",(0,r.jsx)(n.code,{children:"MonsterViewModel"}),", je\u015bli jeszcze go nie ma,"]}),"\n",(0,r.jsxs)(n.li,{children:["przechowa go w specjalnym ",(0,r.jsx)(n.code,{children:"ViewModelStore"}),","]}),"\n",(0,r.jsxs)(n.li,{children:["a przy ka\u017cdym kolejnym wywo\u0142aniu ",(0,r.jsx)(n.code,{children:"by viewModels()"})," w tej samej aktywno\u015bci:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"zwr\xf3ci ten sam obiekt."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"by viewModels()"})," - tworzy nowy obiekt ",(0,r.jsx)(n.code,{children:"ViewModel"})," i zapisuje go w magazynie ",(0,r.jsx)(n.code,{children:"Activity"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"by activityViewModels()"})," - pobiera obiekt ",(0,r.jsx)(n.code,{children:"ViewModel"})," z magazynu ",(0,r.jsx)(n.code,{children:"Activity"})]}),"\n"]})}),"\n",(0,r.jsx)(n.h4,{id:"firstfragmentkt",children:(0,r.jsx)(n.code,{children:"FirstFragment.kt"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"//..\n\nclass FirstFragment : Fragment() {\n\n    private var _binding: FragmentFirstBinding? = null\n    private val binding get() = _binding!!\n\n// POBIERAMY VIEWMODEL Z MAGAZYNU ANDROIDAl!!!\n    private val sharedViewModel: MonsterViewModel by activityViewModels()\n\n    override fun onDestroy() { //...\n\n\n  override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n\n        // Obserwujemy dane z ViewModelu!!!\n        sharedViewModel.monsterDescription.observe(viewLifecycleOwner) { description ->\n            binding.resultText.text = description\n        }\n\n//...\n\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Wyja\u015bnienie"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sharedViewModel.monsterDescription.observe(viewLifecycleOwner) { description ->\nbinding.resultText.text = description\n}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sharedViewModel"})," to po\u0142\u0105czenie z viewModelem z aktywno\u015bci"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"monsterDescritpion"})," to w\u0142a\u015bciwo\u015b\u0107 z klasy ",(0,r.jsx)(n.code,{children:"MonsterViewModel"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["ta w\u0142a\u015bciwo\u015b\u0107 zwraca specjalny obiekt ",(0,r.jsx)(n.code,{children:"MutableLiveData<String>"})]}),"\n",(0,r.jsxs)(n.li,{children:["na tej li\u015bcie ustawiasz nas\u0142uchiwacza/obserwatora:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["gdy warto\u015b\u0107 tego obiektu si\u0119 zmieni (",(0,r.jsx)(n.code,{children:"monsterDescription.value"}),"),"]}),"\n",(0,r.jsxs)(n.li,{children:["wykonuje si\u0119 funkcja strza\u0142kowa ",(0,r.jsx)(n.code,{children:"{description -> ...}"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.mdxAdmonitionTitle,{children:(0,r.jsx)(n.code,{children:"viewLifecycleOwner"})}),(0,r.jsxs)(n.p,{children:["Metoda ",(0,r.jsx)(n.code,{children:"observer"})," z ",(0,r.jsx)(n.code,{children:"LiveData"})," przyjmuje dwa argumenty:"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"owner"})," czyli kto kontroluje cykl \u017cycia obserwacji","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["to jest ",(0,r.jsx)(n.code,{children:"viewLifecycleOwner"}),", a gwarantuje on, \u017ce:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["gdy ",(0,r.jsx)(n.strong,{children:"widok"})," fragmentu zostanie zniszczony (",(0,r.jsx)(n.code,{children:"onDestroyView()"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["to ",(0,r.jsx)(n.code,{children:"LiveData"})," automatycznie przestanie nas\u0142uchiwa\u0107"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"observer"})," funkcja, kt\xf3ra wykona si\u0119 przy zmianie danych","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["to jest ",(0,r.jsx)(n.code,{children:"{description -> ...}"})]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(n.admonition,{type:"danger",children:[(0,r.jsxs)(n.mdxAdmonitionTitle,{children:["Fragment istnieje d\u0142u\u017cej ni\u017c jego widok (",(0,r.jsx)(n.em,{children:"UI"}),")"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Fragment"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"obiekt Kotlina"}),"\n",(0,r.jsx)(n.li,{children:"zawiera logik\u0119, zmienna, metody"}),"\n",(0,r.jsxs)(n.li,{children:["powstaje ",(0,r.jsx)(n.code,{children:"onAttach()"}),", ",(0,r.jsx)(n.code,{children:"onCreate()"})]}),"\n",(0,r.jsxs)(n.li,{children:["ginie ",(0,r.jsx)(n.code,{children:"onDestroy()"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"View"}),"/Widok fragmentu:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["hierarchia widok\xf3w (powstaje po ",(0,r.jsx)(n.code,{children:"inflate()"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["powstaje ",(0,r.jsx)(n.code,{children:"onCreateView()"})]}),"\n",(0,r.jsxs)(n.li,{children:["ginie ",(0,r.jsx)(n.code,{children:"onDestroyView()"})]}),"\n"]}),"\n"]}),"\n"]}),(0,r.jsx)(n.p,{children:"WIELKA ZAMIANA"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["kasujemy we fragmentach metod\u0119 ",(0,r.jsx)(n.code,{children:"onDestroy()"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"niszczenie fragmentu i tak b\u0119dzie wywo\u0142ywana na mocy dziedziczenia"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["dopisujemy metod\u0119 ",(0,r.jsx)(n.code,{children:"onDestroyView()"})]}),"\n"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:" override fun onDestroyView() {\n        super.onDestroyView()\n        _binding = null\n    }\n"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["w ",(0,r.jsx)(n.code,{children:"onDestroyView()"})," zniszczymuy ",(0,r.jsx)(n.strong,{children:"widok"})," fragmentu"]}),"\n",(0,r.jsxs)(n.li,{children:["w ",(0,r.jsx)(n.code,{children:"onDestroy()"})," zniszczymy ",(0,r.jsx)(n.strong,{children:"fragment"})]}),"\n"]})]}),"\n",(0,r.jsx)(n.h2,{id:"secondfragmentkt",children:(0,r.jsx)(n.code,{children:"SecondFragment.kt"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["zamieniamy metod\u0119 ",(0,r.jsx)(n.code,{children:"onDestory()"})," na ",(0,r.jsx)(n.code,{children:"onDestroyView()"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"  override fun onDestroyView() {\n        super.onDestroyView()\n        _binding = null\n    }\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"important",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["w ",(0,r.jsx)(n.code,{children:"nav_graph.xml"})," dodajemy akcj\u0119 przej\u015bcia od ",(0,r.jsx)(n.code,{children:"SecondFragment"})," do ",(0,r.jsx)(n.code,{children:"FirstFragment"})]}),"\n"]})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["pobieramy ",(0,r.jsx)(n.code,{children:"ViewModel"})," z ",(0,r.jsx)(n.code,{children:"Activity"})," u\u017cywaj\u0105c ",(0,r.jsx)(n.code,{children:"by activityViewModels()"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"\n   // to w\u0142a\u015bciwo\u015b\u0107 obiektu SecondFragment\n    private val sharedViewModel: MonsterViewModel by activityViewModels()\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["nas\u0142uchiwaczu na przycisku","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["dodajemy wys\u0142anie danych do ",(0,r.jsx)(n.code,{children:"ViewModelu"})]}),"\n",(0,r.jsx)(n.li,{children:"tworzymy akcj\u0119 przej\u015bcia"}),"\n",(0,r.jsxs)(n.li,{children:["nawigujemy do ",(0,r.jsx)(n.code,{children:"FirstFragment"})," na podstawie obiekt ",(0,r.jsx)(n.code,{children:"action"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"  binding.confirmButton.setOnClickListener {\n           //..\n\n            // Wysy\u0142amy dane do wsp\xf3lnego ViewModelu\n            sharedViewModel.sendMonsterDescription(description)\n\n            val action = SecondFragmentDirections.actionSecondFragmentToFirstFragment()\n\n            findNavController().navigate(action)\n\n\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"nazwa-potwora-przez-monsterviewmodel",children:["Nazwa potwora przez ",(0,r.jsx)(n.code,{children:"MonsterViewModel"})]}),"\n",(0,r.jsx)(n.h3,{id:"podsumowanie-aktualnego-stanu",children:"Podsumowanie aktualnego stanu"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["aktualnie nazw\u0119 potwora wysy\u0142amy do drugiej aktywno\u015bci:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["przez ",(0,r.jsx)(n.code,{children:"argument"})," zdefiniowany w ",(0,r.jsx)(n.code,{children:"nav_graph.xml"}),"\nto element fragmentu drugiego z ",(0,r.jsx)(n.code,{children:"nav_graph.xml"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:' <argument\n            android:name="monsterName"\n            app:argType="string"\n            android:defaultValue="Godzilla" />\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["w ",(0,r.jsx)(n.code,{children:"FirstFragment.kt"})," wysy\u0142amy dane do drugiej aktywno\u015bci przez"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"//...\n    binding.sendButton.setOnClickListener {\n           val name = binding.lastNameEditText.text.toString()\n           val action = FirstFragmentDirections\n               .actionFirstFragmentToSecondFragment(name)\n\n           findNavController().navigate(action)\n       }\n//...\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["dane odbieramy w ",(0,r.jsx)(n.code,{children:"SecondFragment.kt"})," przez"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'//...\n     private val args: SecondFragmentArgs by navArgs()\n//...\n override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n\n        binding.monsterLabel.text = "Tw\xf3j potw\xf3rz: ${args.monsterName}"\n///\n'})}),"\n",(0,r.jsx)(n.h3,{id:"zmiany",children:"Zmiany"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["zamiast ",(0,r.jsx)(n.code,{children:".actionFirstFragmentToSecondFragment(name)"})]}),"\n",(0,r.jsxs)(n.li,{children:["b\u0119dziemy chcieli, aby","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"FirstFragment"})," zapisywa\u0142 ",(0,r.jsx)(n.code,{children:"name"})," do ",(0,r.jsx)(n.code,{children:"MonsterViewModel"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SecondFragment"})," obserwowa\u0142 ",(0,r.jsx)(n.code,{children:"MonsterViewModel"})," i wy\u015bwietla imi\u0119 potwora."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"dodanie-setter-w-monsterviewmodel",children:["Dodanie setter w ",(0,r.jsx)(n.code,{children:"MonsterViewModel"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"class MonsterViewModel: ViewModel() {\n    private val _monsterDescription = MutableLiveData<String>()\n    val monsterDescription: LiveData<String> get() = _monsterDescription\n\n    fun setMonsterName(name: String) {\n            _monsterName.value = name\n        }\n}\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"u\u017cycie-settera-w-firstfragment",children:["U\u017cycie settera w ",(0,r.jsx)(n.code,{children:"FirstFragment"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"//...\n        binding.sendButton.setOnClickListener {\n           val name = binding.lastNameEditText.text.toString()\n\n           //wy\u0142\u0105czamy Safe Args\n           // val action = FirstFragmentDirections\n               // .actionFirstFragmentToSecondFragment(name)\n\n           //u\u017cywamy settera\n           sharedViewModel.sendMonsterName(name)\n\n\n           findNavController().navigate(action)\n       }\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"obserwowanie-monsterviewmodel-w-secondfragment",children:["Obserwowanie ",(0,r.jsx)(n.code,{children:"MonsterViewModel"})," w ",(0,r.jsx)(n.code,{children:"SecondFragment"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'binding.confirmButton.setOnClickListener {\n//...\n sharedViewModel.monsterName.observe(viewLifecycleOwner){ name ->\n            binding.monsterLabel.text = "Tw\xf3j potw\xf3r nazywa si\u0119: $name"\n        }\n//...\n\n// ustawiamy now\u0105 warto\u015b\u0107 dla desktypcji\n val name = sharedViewModel.monsterName.value.takeUnless { it.isNullOrEmpty() } ?: "Straci\u0142 imi\u0119"\n val description =  "Tw\xf3j potw\xf3r $name  jest $scary," +\n                    " ma kolor $color i $eyes ${if (eyes == 1) "oko" else "oka"}"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"gdy-dekskrypcja-i-imi\u0119-sta\u0142y-si\u0119-jednym-obiektem",children:"Gdy dekskrypcja i imi\u0119 sta\u0142y si\u0119 jednym obiektem"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"opis/deskrypcja potwora by\u0142 stringiem"}),"\n",(0,r.jsx)(n.li,{children:"przekszta\u0142cimy ten string w obiekt klasy Monster"}),"\n",(0,r.jsx)(n.li,{children:"i taki obiekt b\u0119dziemy przesy\u0142a\u0107"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"dodajemy-dataclass-monsterkt",children:["Dodajemy dataclass ",(0,r.jsx)(n.code,{children:"Monster.kt"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"data class Monster(\n    val name: String,\n    val color: String,\n    val eyes: Int,\n    val scary: Boolean\n)\n\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"zmiany-w-monsterviewmodelkt",children:["Zmiany w ",(0,r.jsx)(n.code,{children:"MonsterViewModel.kt"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Zamiast dw\xf3ch osobnych ",(0,r.jsx)(n.code,{children:"LiveData"})," (",(0,r.jsx)(n.code,{children:"name"})," i ",(0,r.jsx)(n.code,{children:"description"}),"),"]}),"\n",(0,r.jsx)(n.li,{children:"u\u017cyjemy jednej dla ca\u0142ego obiektu Monster:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'class MonsterViewModel: ViewModel() {\n\n    private val _monster = MutableLiveData<Monster>()\n    val monster: LiveData<Monster> get() = _monster\n\n    fun setMonster(\n        name: String = "brak imienia",\n        color: String = "brak koloru",\n        eyes: Int = 0,\n        scary: Boolean = false) {\n            _monster.value = Monster(name, color, eyes, scary)\n    }\n\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"zmiany-w-firstfragmentkt",children:["Zmiany w ",(0,r.jsx)(n.code,{children:"FirstFragment.kt"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["wsp\xf3\u0142dzielimy ",(0,r.jsx)(n.code,{children:"MonsterViewModel"}),' "pracuje" na obiekcie ',(0,r.jsx)(n.code,{children:"Monster"})]}),"\n",(0,r.jsxs)(n.li,{children:["niczego nie wysy\u0142amy, tylko zmieniamy obiekt ",(0,r.jsx)(n.code,{children:"Monster"})," w ",(0,r.jsx)(n.code,{children:"MonsterViewModel"})]}),"\n",(0,r.jsxs)(n.li,{children:["i obserwujemy ten obiekt w ",(0,r.jsx)(n.code,{children:"SecondFragment"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'//...\n    // Obserwujemy dane z ViewModelu\nsharedViewModel.monster.observe(viewLifecycleOwner) { monster ->\n    monster?.let {\n        binding.resultText.text = """Twoj potow\xf3r nazywa si\u0119 ${it.name},\n        ma kolor ${it.color},\n        ma ${it.eyes} oczu ,\n        jest ${if (it.scary) "straszny" else "uroczy"}""".trimIndent()\n    }\n\n}\n binding.sendButton.setOnClickListener {\n           val name = binding.lastNameEditText.text.toString()\n\n           sharedViewModel.setMonster(name)\n\n           findNavController().navigate(\n               FirstFragmentDirections.actionFirstFragmentToSecondFragment()\n           )\n\n\n       }\n'})}),"\n",(0,r.jsxs)(n.admonition,{type:"important",children:[(0,r.jsx)(n.mdxAdmonitionTitle,{children:(0,r.jsx)(n.code,{children:"let"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"zmienna?.let { kod_wewn\u0105trz }\n"})}),(0,r.jsx)(n.p,{children:"czyli:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Je\u015bli zmienna ",(0,r.jsx)(n.strong,{children:"nie jest"})," ",(0,r.jsx)(n.code,{children:"null"}),", to","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["wykonaj kod w ",(0,r.jsx)(n.code,{children:"let { ... }"})]}),"\n",(0,r.jsxs)(n.li,{children:["i udost\u0119pnij mi t\u0119 zmienn\u0105 jako ",(0,r.jsx)(n.code,{children:"it"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Je\u015bli zmienna jest ",(0,r.jsx)(n.code,{children:"null"}),", to pomi\u0144 ca\u0142y blok i nic nie r\xf3b."]}),"\n"]})]}),"\n",(0,r.jsxs)(n.h3,{id:"zmiany-w-secondfragmentkt",children:["Zmiany w ",(0,r.jsx)(n.code,{children:"SecondFragment.kt"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'//...\n    sharedViewModel.monster.observe(viewLifecycleOwner){ monster ->\n        binding.monsterLabel.text = "Tw\xf3j potw\xf3r nazywa si\u0119: ${monster.name}"\n        }\n//...\n    val name = sharedViewModel.monster.value?.name?.takeUnless { it.isEmpty() } ?: "Straci\u0142 imi\u0119"\n                sharedViewModel.setMonster(name, color, eyes, scary == "straszny")\n\n'})})]})}function j(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var s=i(6540);const r={},d=s.createContext(r);function l(e){const n=s.useContext(d);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);