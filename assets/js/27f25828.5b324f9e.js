"use strict";(self.webpackChunkmobile=self.webpackChunkmobile||[]).push([[8227],{4610:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Intro Kotlin/Klasy/Abstrakcja","title":"Abstrakcja","description":"- Abstrakcja to zasada OOP polegaj\u0105ca na tworzeniu og\xf3lnego opisu rzeczy lub zachowa\u0144, bez wdawania si\u0119 w szczeg\xf3\u0142y techniczne.","source":"@site/docs/1. Intro Kotlin/07-Klasy/7.Abstrakcja.mdx","sourceDirName":"1. Intro Kotlin/07-Klasy","slug":"/Intro Kotlin/Klasy/Abstrakcja","permalink":"/mobile/docs/Intro Kotlin/Klasy/Abstrakcja","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/1. Intro Kotlin/07-Klasy/7.Abstrakcja.mdx","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"title":"Abstrakcja"},"sidebar":"tutorialSidebar","previous":{"title":"Polimorfizm","permalink":"/mobile/docs/Intro Kotlin/Klasy/Polimorfizm"},"next":{"title":"Wprowadzenie","permalink":"/mobile/docs/Podstawowe View/intro"}}');var t=a(4848),o=a(8453);const s={title:"Abstrakcja"},r="Abstrakcja",l={},c=[];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"abstrakcja",children:"Abstrakcja"})}),"\n",(0,t.jsx)(n.admonition,{title:"Co to jest abstrakcja?",type:"info",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Abstrakcja to zasada OOP polegaj\u0105ca na tworzeniu og\xf3lnego opisu rzeczy lub zachowa\u0144, bez wdawania si\u0119 w szczeg\xf3\u0142y techniczne."}),"\n",(0,t.jsx)(n.li,{children:"Abstrakcja pozwala zdefiniowa\u0107 \u201eszkielet\u201d obiektu: co on mo\u017ce robi\u0107 lub jakie ma cechy \u2014 ale nie m\xf3wi, jak to robi."}),"\n",(0,t.jsx)(n.li,{children:"Szczeg\xf3\u0142y s\u0105 ustalane dopiero w klasach dziedzicz\u0105cych."}),"\n"]})}),"\n",(0,t.jsxs)(n.admonition,{title:"Metafora: UFO jako koncept",type:"note",children:[(0,t.jsx)(n.p,{children:"Wyobra\u017a sobie, \u017ce naukowcy projektuj\u0105 og\xf3lny model UFO:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Wiedz\u0105, \u017ce UFO mo\u017ce lata\u0107 i si\u0119 maskowa\u0107, ale nie maj\u0105 poj\u0119cia, jak dok\u0142adnie to si\u0119 dzieje w r\xf3\u017cnych typach UFO."}),"\n",(0,t.jsx)(n.li,{children:"M\xf3wi\u0105: \u201eKa\u017cde UFO musi umie\u0107 lata\u0107 i mo\u017ce si\u0119 maskowa\u0107, ale ka\u017cdy producent niech wymy\u015bli w\u0142asny spos\xf3b na realizacj\u0119 tych funkcji.\u201d"}),"\n"]}),(0,t.jsx)(n.p,{children:"Takim og\xf3lnym modelem jest klasa abstrakcyjna lub interfejs."})]}),"\n",(0,t.jsx)(n.h1,{id:"klasa-abstrakcyjna",children:"Klasa abstrakcyjna"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'\n// S\u0142owo `abstract` przy klasie oznacza, \u017ce nie mo\u017cesz utworzy\u0107 obiektu tej klasy bezpo\u015brednio.\nabstract class UFO(val shape: String = "kuleczka") {\n\n    // to \u201ewymuszony kontrakt\u201d na ka\u017cd\u0105 klas\u0119 potomn\u0105: musisz mie\u0107 metod\u0119 fly()!\n    abstract fun fly()     // ka\u017cda klasa potomna musi to zaimplementowa\u0107\n\n    open fun cloak() {     // klasa potomna MO\u017bE nadpisa\u0107, ale nie musi\n        println("UFO w kszta\u0142cie $shape pr\xf3buje si\u0119 ukry\u0107...")\n    }\n}\n\nclass NormalUFO: UFO(){\n    override fun fly(){\n        println("Normalne ufo ma kszta\u0142 $shape i teraz leci")\n    }\n}\n\nclass SilverUFO : UFO("dysk") {\n    override fun fly() {\n        println("Srebrne UFO  \u015bmiga w zawrotnym tempie!")\n    }\n\n    override fun cloak() {\n        println("Srebrne UFO (ma kszta\u0142 $shape) znika, staj\u0105c si\u0119 ca\u0142kiem niewidzialne!")\n    }\n}\n\nclass GoldenUFO(shape: String) : UFO(shape) {\n    override fun fly() {\n        println("Z\u0142ote UFO unosi si\u0119 majestatycznie ponad ziemi\u0105!")\n    }\n    // nie musimy nadpisywa\u0107 cloak(), je\u015bli nam nie zale\u017cy\n}\n\n\n\n\n\nfun main() {\n    // val ufo = UFO("tr\xf3jk\u0105t") // B\u0141\u0104D! Nie mo\u017cna utworzy\u0107 obiektu klasy abstrakcyjnej\n\n    val normalne = NormalUFO()\n    val srebrne = SilverUFO()\n    val zloty = GoldenUFO("Super KULA")\n\n    normalne.fly()\t// Normalne ufo ma kszta\u0142 kuleczka i teraz leci\n    normalne.cloak()// UFO w kszta\u0142cie kuleczka pr\xf3buje si\u0119 ukry\u0107.\n    srebrne.fly()   // Srebrne UFO  \u015bmiga w zawrotnym tempie!\n    srebrne.cloak() // Srebrne UFO (ma kszta\u0142 dysk) znika, staj\u0105c si\u0119 ca\u0142kiem niewidzialne!\n    zloty.fly()     // Z\u0142ote UFO unosi si\u0119 majestatycznie ponad ziemi\u0105!\n    zloty.cloak()   // UFO w kszta\u0142cie Super KULA pr\xf3buje si\u0119 ukry\u0107...\n\n\n}\n'})}),"\n",(0,t.jsx)(n.h1,{id:"interfejs",children:"Interfejs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Interfejs w Kotlinie to kontrakt: m\xf3wi, jakie metody/cechy ",(0,t.jsx)(n.strong,{children:"MUSZ\u0104"})," by\u0107 zaimplementowane przez klas\u0119, kt\xf3ra go \u201ewdra\u017ca\u201d (: InterfaceName)."]}),"\n",(0,t.jsxs)(n.li,{children:["Interfejs:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"nie mo\u017ce mie\u0107 konstruktora,"}),"\n",(0,t.jsxs)(n.li,{children:["nie trzyma stanu (nie ma np. w\u0142asnych p\xf3l typu ",(0,t.jsx)(n.code,{children:"val shape"})," przechowywanych w obiekcie)."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Mo\u017ce mie\u0107 w\u0142asno\u015bci (val, var) i domy\u015blne implementacje metod (z cia\u0142em)."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Ka\u017cda klasa mo\u017ce implementowa\u0107 wiele interfejs\xf3w."})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>r});var i=a(6540);const t={},o=i.createContext(t);function s(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);