"use strict";(self.webpackChunkmobile=self.webpackChunkmobile||[]).push([[2432],{8453:(n,e,o)=>{o.d(e,{R:()=>i,x:()=>l});var a=o(6540);const r={},t=a.createContext(r);function i(n){const e=a.useContext(t);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),a.createElement(t.Provider,{value:e},n.children)}},9084:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"Intro Kotlin/Funkcje/foreach","title":"forEach()","description":"-","source":"@site/docs/1. Intro Kotlin/06-Funkcje/65.foreach.mdx","sourceDirName":"1. Intro Kotlin/06-Funkcje","slug":"/Intro Kotlin/Funkcje/foreach","permalink":"/mobile/docs/Intro Kotlin/Funkcje/foreach","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/1. Intro Kotlin/06-Funkcje/65.foreach.mdx","tags":[],"version":"current","sidebarPosition":65,"frontMatter":{"title":"forEach()"},"sidebar":"tutorialSidebar","previous":{"title":"Funkcja fold()","permalink":"/mobile/docs/Intro Kotlin/Funkcje/redukcja-fold"},"next":{"title":"Dodatkowe funkcje wy\u017cszego rz\u0119du","permalink":"/mobile/docs/Intro Kotlin/Funkcje/DodatkoweFunkcje"}}');var r=o(4848),t=o(8453);const i={title:"forEach()"},l=void 0,s={},c=[{value:"title: forEach()",id:"title-foreach",level:2},{value:"Podstawowe zastosowanie",id:"podstawowe-zastosowanie",level:2},{value:"Przyk\u0142ad z indeksem",id:"przyk\u0142ad-z-indeksem",level:2},{value:"Przyk\u0142ad ze s\u0142ownikiem/map\u0105",id:"przyk\u0142ad-ze-s\u0142ownikiemmap\u0105",level:2},{value:"Przyk\u0142ad z obiektem",id:"przyk\u0142ad-z-obiektem",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",hr:"hr",p:"p",pre:"pre",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"title-foreach",children:"title: forEach()"}),"\n",(0,r.jsx)(e.h1,{id:"foreach",children:(0,r.jsx)(e.code,{children:"forEach()"})}),"\n",(0,r.jsx)(e.p,{children:"- w Kotlinie dzia\u0142a bardzo podobnie jak w TypeScripcie czy C#\n- to metoda kolekcji, kt\xf3ra pozwala wykona\u0107 dan\u0105 akcj\u0119 dla ka\u017cdego elementu listy, zbioru czy mapy."}),"\n",(0,r.jsx)(e.h2,{id:"podstawowe-zastosowanie",children:"Podstawowe zastosowanie"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-kotlin",children:'  val numbers = listOf(1, 2, 3, 4, 5)\n\n    numbers.forEach { number ->\n        println("Liczba: $number")\n    }\n/*\n    mo\u017cna skr\xf3ci\u0107 do:\n    numbers.forEach { println("Liczba: $it") }\n*/\n\n// zapis r\xf3wnowa\u017cny\n for(number in numbers) {\n      println("Liczba: $number")\n  }\n'})}),"\n",(0,r.jsx)(e.h2,{id:"przyk\u0142ad-z-indeksem",children:"Przyk\u0142ad z indeksem"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-kotlin",children:'val fruits = listOf("apple", "banana", "cherry")\n\n\tfruits.forEachIndexed { index, fruit ->\n   \t\tprintln("${index + 1}. $fruit")\n\t}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"przyk\u0142ad-ze-s\u0142ownikiemmap\u0105",children:"Przyk\u0142ad ze s\u0142ownikiem/map\u0105"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-kotlin",children:'val people = mapOf("Alice" to 25, "Bob" to 30)\n\npeople.forEach { (name, age) ->\n    println("$name ma $age lat")\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"przyk\u0142ad-z-obiektem",children:"Przyk\u0142ad z obiektem"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-kotlin",children:'data class Person(val name: String, val age: Int, val job: String)\n\nfun main() {\n    val people = listOf(\n        Person("Alice", 25, "Engineer"),\n        Person("Bob", 30, "Teacher"),\n        Person("Charlie", 22, "Designer")\n    )\n\n    // Dla ka\u017cdego elementu z listy wykonaj kod w lambda\n    people.forEach { person ->\n        println("${person.name} ma ${person.age} lat i pracuje jako ${person.job}.")\n    }\n}\n\n// w wersji skr\xf3conej:\n    people.forEach {\n        println("${it.name} ma ${it.age} lat i pracuje jako ${it.job}.")\n    }\n}\n\n// z warunkiem\npeople.forEach {\n    if (it.age >= 30) {\n        println("${it.name} jest doros\u0142y i ma ${it.age} lat.")\n    }\n   }\n\n\n//z indeksem\n \tpeople.forEachIndexed { index, person ->\n    \tprintln("${index + 1}. ${person.name} (${person.job})")\n\t}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n'})})]})}function p(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}}}]);